{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pujitha Balaga\\\\Desktop\\\\SCM PROJECT\\\\Code_SCM\\\\client\\\\src\\\\components\\\\Navbar.js\";\n// import React from \"react\";\n// import clsx from \"clsx\";\n// import { makeStyles, useTheme } from \"@material-ui/core/styles\";\n// import Drawer from \"@material-ui/core/Drawer\";\n// import CssBaseline from \"@material-ui/core/CssBaseline\";\n// import AppBar from \"@material-ui/core/AppBar\";\n// import Toolbar from \"@material-ui/core/Toolbar\";\n// import List from \"@material-ui/core/List\";\n// import Typography from \"@material-ui/core/Typography\";\n// import IconButton from \"@material-ui/core/IconButton\";\n// import MenuIcon from \"@material-ui/icons/Menu\";\n// import ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\n// import ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\n// import ListItem from \"@material-ui/core/ListItem\";\n// import ListItemText from \"@material-ui/core/ListItemText\";\n// import { Link } from \"react-router-dom\";\n// import GitHubIcon from \"@material-ui/icons/GitHub\";\n// const drawerWidth = 240;\n// const useStyles = makeStyles((theme) => ({\n//   root: {\n//     display: \"flex\",\n//   },\n//   appBar: {\n//     backgroundColor: \"#5C2D91\", \n//     transition: theme.transitions.create([\"margin\", \"width\"], {\n//       easing: theme.transitions.easing.sharp,\n//       duration: theme.transitions.duration.leavingScreen,\n//     }),\n//   },\n//   appBarShift: {\n//     width: `calc(100% - ${drawerWidth}px)`,\n//     marginLeft: drawerWidth,\n//     transition: theme.transitions.create([\"margin\", \"width\"], {\n//       easing: theme.transitions.easing.easeOut,\n//       duration: theme.transitions.duration.enteringScreen,\n//     }),\n//   },\n//   menuButton: {\n//     marginRight: theme.spacing(2),\n//   },\n//   hide: {\n//     display: \"none\",\n//   },\n//   drawer: {\n//     width: drawerWidth,\n//     flexShrink: 0,\n//   },\n//   drawerPaper: {\n//     width: drawerWidth,\n//     backgroundColor: \"#5C2D91\", \n//     color: \"#fff\",\n//   },\n//   drawerHeader: {\n//     display: \"flex\",\n//     alignItems: \"center\",\n//     padding: theme.spacing(0, 1),\n//     // necessary for content to be below app bar\n//     ...theme.mixins.toolbar,\n//     justifyContent: \"flex-end\",\n//   },\n//   content: {\n//     flexGrow: 1,\n//     padding: theme.spacing(3),\n//     transition: theme.transitions.create(\"margin\", {\n//       easing: theme.transitions.easing.sharp,\n//       duration: theme.transitions.duration.leavingScreen,\n//     }),\n//     marginLeft: -drawerWidth,\n//   },\n//   contentShift: {\n//     transition: theme.transitions.create(\"margin\", {\n//       easing: theme.transitions.easing.easeOut,\n//       duration: theme.transitions.duration.enteringScreen,\n//     }),\n//     marginLeft: 0,\n//   },\n// }));\n// export default function PersistentDrawerLeft({ pageTitle, navItems, children }) {\n//   const classes = useStyles();\n//   const theme = useTheme();\n//   const [open, setOpen] = React.useState(true);\n//   const handleDrawerOpen = () => {\n//     setOpen(true);\n//   };\n//   const handleDrawerClose = () => {\n//     setOpen(false);\n//   };\n//   return (\n//     <div className={classes.root}>\n//       <CssBaseline />\n//       <AppBar\n//         position=\"fixed\"\n//         className={clsx(classes.appBar, {\n//           [classes.appBarShift]: open,\n//         })}\n//       >\n//         <Toolbar>\n//           <IconButton\n//             color=\"inherit\"\n//             aria-label=\"open drawer\"\n//             onClick={handleDrawerOpen}\n//             edge=\"start\"\n//             className={clsx(classes.menuButton, open && classes.hide)}\n//           >\n//             <MenuIcon />\n//           </IconButton>\n//           <Typography\n//             variant=\"h6\"\n//             noWrap\n//             style={{ display: \"flex\", alignItems: \"center\" }}\n//           >\n//             <img\n//               alt=\".\"\n//               src=\"/logo.png\"\n//               style={{ height: \"100px\", width: \"auto\" }}\n//             />\n//           </Typography>\n//         </Toolbar>\n//       </AppBar>\n//       <Drawer\n//         className={classes.drawer}\n//         variant=\"persistent\"\n//         anchor=\"left\"\n//         open={open}\n//         classes={{\n//           paper: classes.drawerPaper,\n//         }}\n//       >\n//         <div className={classes.drawerHeader}>\n//           <ListItemText>\n//             <b>{pageTitle}</b>\n//           </ListItemText>\n//           <IconButton onClick={handleDrawerClose}>\n//             {theme.direction === \"ltr\" ? (\n//               <ChevronLeftIcon style={{ color: \"#fff\" }} />\n//             ) : (\n//               <ChevronRightIcon />\n//             )}\n//           </IconButton>\n//         </div>\n//         <List>\n//           <Link to=\"/\" style={{ textDecoration: \"none\", color: \"#fff\" }}>\n//             <ListItem>\n//               <ListItemText>Home</ListItemText>\n//             </ListItem>\n//           </Link>\n//           <Link\n//             to=\"/explorer\"\n//             style={{ textDecoration: \"none\", color: \"#fff\" }}\n//           >\n//             <ListItem>\n//               <ListItemText>Explorer</ListItemText>\n//             </ListItem>\n//           </Link>\n//         </List>\n//         <List>\n//           {navItems.length !== 0 ? (\n//             navItems.map((item) => (\n//               <Link\n//                 to={item[1]}\n//                 style={{ textDecoration: \"none\", color: \"#fff\" }}\n//               >\n//                 <ListItem button key={item[0]}>\n//                   <ListItemText primary={item[0]} />\n//                 </ListItem>\n//               </Link>\n//             ))\n//           ) : (\n//             <></>\n//           )}\n//         </List>\n//         <div\n//           style={{ height: \"100%\", display: \"flex\", alignItems: \"flex-end\" }}\n//         >\n//           <div\n//             style={{\n//               width: \"100%\",\n//               height: \"70px\",\n//               display: \"flex\",\n//               justifyContent: \"center\",\n//               alignItems: \"center\",\n//               fontWeight: 500,\n//               fontSize: 17,\n//               borderTop: \"1px solid #44a\",\n//             }}\n//           >\n//             <a\n//               style={{ textDecoration: \"none\" }}\n//               href=\"#\"\n//             >\n//               <GitHubIcon style={{ color: \"#fff\" }} />\n//             </a>\n//           </div>\n//         </div>\n//       </Drawer>\n//       <main\n//         className={clsx(classes.content, {\n//           [classes.contentShift]: open,\n//         })}\n//       >\n//         <div className={classes.drawerHeader} />\n//         <div style={{ margin: \"0 auto\", maxWidth: 1300 }}>{children}</div>\n//       </main>\n//     </div>\n//   );\n// }\nimport React from \"react\";\nimport clsx from \"clsx\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport List from \"@material-ui/core/List\";\nimport Typography from \"@material-ui/core/Typography\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport ExploreIcon from \"@material-ui/icons/Explore\";\nimport GitHubIcon from \"@material-ui/icons/GitHub\";\nimport { Link } from \"react-router-dom\";\nconst drawerWidth = 260;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\"\n  },\n  appBar: {\n    background: \"linear-gradient(135deg, #6a11cb, #2575fc)\",\n    transition: theme.transitions.create([\"margin\", \"width\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    color: \"#fff\"\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create([\"margin\", \"width\"], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  menuButton: {\n    marginRight: theme.spacing(2)\n  },\n  hide: {\n    display: \"none\"\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0\n  },\n  drawerPaper: {\n    width: drawerWidth,\n    background: \"#1c1c1c\",\n    color: \"#fff\",\n    boxShadow: \"4px 0px 10px rgba(0,0,0,0.3)\"\n  },\n  drawerHeader: {\n    display: \"flex\",\n    alignItems: \"center\",\n    padding: theme.spacing(0, 1),\n    ...theme.mixins.toolbar,\n    justifyContent: \"space-between\"\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    transition: theme.transitions.create(\"margin\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    marginLeft: -drawerWidth\n  },\n  contentShift: {\n    transition: theme.transitions.create(\"margin\", {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen\n    }),\n    marginLeft: 0\n  },\n  sidebarButton: {\n    color: \"#fff\",\n    padding: \"12px 20px\",\n    display: \"flex\",\n    alignItems: \"center\",\n    borderRadius: \"5px\",\n    margin: \"5px 15px\",\n    \"&:hover\": {\n      background: \"#333\",\n      transition: \"0.3s\"\n    }\n  },\n  sidebarIcon: {\n    marginRight: 10\n  },\n  githubFooter: {\n    width: \"100%\",\n    height: \"70px\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    borderTop: \"1px solid #444\"\n  }\n}));\nexport default function PersistentDrawerLeft({\n  pageTitle,\n  navItems,\n  children\n}) {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [open, setOpen] = React.useState(true);\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CssBaseline, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(AppBar, {\n    position: \"fixed\",\n    className: clsx(classes.appBar, {\n      [classes.appBarShift]: open\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Toolbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    color: \"inherit\",\n    \"aria-label\": \"open drawer\",\n    onClick: handleDrawerOpen,\n    edge: \"start\",\n    className: clsx(classes.menuButton, open && classes.hide),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(MenuIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    noWrap: true,\n    style: {\n      display: \"flex\",\n      alignItems: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    alt: \"logo\",\n    src: \"/logo.png\",\n    style: {\n      height: \"40px\",\n      width: \"auto\",\n      marginRight: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 13\n    }\n  }), \"SecureChain\"))), /*#__PURE__*/React.createElement(Drawer, {\n    className: classes.drawer,\n    variant: \"persistent\",\n    anchor: \"left\",\n    open: open,\n    classes: {\n      paper: classes.drawerPaper\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.drawerHeader,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 375,\n      columnNumber: 11\n    }\n  }, pageTitle), /*#__PURE__*/React.createElement(IconButton, {\n    onClick: handleDrawerClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 376,\n      columnNumber: 11\n    }\n  }, theme.direction === \"ltr\" ? /*#__PURE__*/React.createElement(ChevronLeftIcon, {\n    style: {\n      color: \"#fff\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 377,\n      columnNumber: 42\n    }\n  }) : /*#__PURE__*/React.createElement(ChevronRightIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 377,\n      columnNumber: 90\n    }\n  }))), /*#__PURE__*/React.createElement(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 380,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/\",\n    style: {\n      textDecoration: \"none\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 381,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ListItem, {\n    button: true,\n    className: classes.sidebarButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 382,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(HomeIcon, {\n    className: classes.sidebarIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 383,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(ListItemText, {\n    primary: \"Home\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 384,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(Link, {\n    to: \"/explorer\",\n    style: {\n      textDecoration: \"none\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 387,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ListItem, {\n    button: true,\n    className: classes.sidebarButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 388,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ExploreIcon, {\n    className: classes.sidebarIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 389,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(ListItemText, {\n    primary: \"Explorer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 390,\n      columnNumber: 15\n    }\n  })))), /*#__PURE__*/React.createElement(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 394,\n      columnNumber: 9\n    }\n  }, navItems.length !== 0 && navItems.map(item => /*#__PURE__*/React.createElement(Link, {\n    to: item[1],\n    style: {\n      textDecoration: \"none\"\n    },\n    key: item[0],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 397,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(ListItem, {\n    button: true,\n    className: classes.sidebarButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 398,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(ListItemText, {\n    primary: item[0],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 399,\n      columnNumber: 19\n    }\n  }))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.githubFooter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 404,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: \"#\",\n    style: {\n      textDecoration: \"none\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 405,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(GitHubIcon, {\n    style: {\n      color: \"#fff\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 406,\n      columnNumber: 13\n    }\n  })))), /*#__PURE__*/React.createElement(\"main\", {\n    className: clsx(classes.content, {\n      [classes.contentShift]: open\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 410,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.drawerHeader,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 411,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      margin: \"0 auto\",\n      maxWidth: 1300\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 412,\n      columnNumber: 9\n    }\n  }, children)));\n}","map":{"version":3,"sources":["C:/Users/Pujitha Balaga/Desktop/SCM PROJECT/Code_SCM/client/src/components/Navbar.js"],"names":["React","clsx","makeStyles","useTheme","Drawer","CssBaseline","AppBar","Toolbar","List","Typography","IconButton","MenuIcon","ChevronLeftIcon","ChevronRightIcon","ListItem","ListItemText","HomeIcon","ExploreIcon","GitHubIcon","Link","drawerWidth","useStyles","theme","root","display","appBar","background","transition","transitions","create","easing","sharp","duration","leavingScreen","color","appBarShift","width","marginLeft","easeOut","enteringScreen","menuButton","marginRight","spacing","hide","drawer","flexShrink","drawerPaper","boxShadow","drawerHeader","alignItems","padding","mixins","toolbar","justifyContent","content","flexGrow","contentShift","sidebarButton","borderRadius","margin","sidebarIcon","githubFooter","height","borderTop","PersistentDrawerLeft","pageTitle","navItems","children","classes","open","setOpen","useState","handleDrawerOpen","handleDrawerClose","paper","direction","textDecoration","length","map","item","maxWidth"],"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","sourcesContent":["// import React from \"react\";\n// import clsx from \"clsx\";\n// import { makeStyles, useTheme } from \"@material-ui/core/styles\";\n// import Drawer from \"@material-ui/core/Drawer\";\n// import CssBaseline from \"@material-ui/core/CssBaseline\";\n// import AppBar from \"@material-ui/core/AppBar\";\n// import Toolbar from \"@material-ui/core/Toolbar\";\n// import List from \"@material-ui/core/List\";\n// import Typography from \"@material-ui/core/Typography\";\n// import IconButton from \"@material-ui/core/IconButton\";\n// import MenuIcon from \"@material-ui/icons/Menu\";\n// import ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\n// import ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\n// import ListItem from \"@material-ui/core/ListItem\";\n// import ListItemText from \"@material-ui/core/ListItemText\";\n// import { Link } from \"react-router-dom\";\n// import GitHubIcon from \"@material-ui/icons/GitHub\";\n\n// const drawerWidth = 240;\n\n// const useStyles = makeStyles((theme) => ({\n//   root: {\n//     display: \"flex\",\n//   },\n//   appBar: {\n//     backgroundColor: \"#5C2D91\", \n//     transition: theme.transitions.create([\"margin\", \"width\"], {\n//       easing: theme.transitions.easing.sharp,\n//       duration: theme.transitions.duration.leavingScreen,\n//     }),\n//   },\n//   appBarShift: {\n//     width: `calc(100% - ${drawerWidth}px)`,\n//     marginLeft: drawerWidth,\n//     transition: theme.transitions.create([\"margin\", \"width\"], {\n//       easing: theme.transitions.easing.easeOut,\n//       duration: theme.transitions.duration.enteringScreen,\n//     }),\n//   },\n//   menuButton: {\n//     marginRight: theme.spacing(2),\n//   },\n//   hide: {\n//     display: \"none\",\n//   },\n//   drawer: {\n//     width: drawerWidth,\n//     flexShrink: 0,\n//   },\n//   drawerPaper: {\n//     width: drawerWidth,\n//     backgroundColor: \"#5C2D91\", \n//     color: \"#fff\",\n//   },\n//   drawerHeader: {\n//     display: \"flex\",\n//     alignItems: \"center\",\n//     padding: theme.spacing(0, 1),\n//     // necessary for content to be below app bar\n//     ...theme.mixins.toolbar,\n//     justifyContent: \"flex-end\",\n//   },\n//   content: {\n//     flexGrow: 1,\n//     padding: theme.spacing(3),\n//     transition: theme.transitions.create(\"margin\", {\n//       easing: theme.transitions.easing.sharp,\n//       duration: theme.transitions.duration.leavingScreen,\n//     }),\n//     marginLeft: -drawerWidth,\n//   },\n//   contentShift: {\n//     transition: theme.transitions.create(\"margin\", {\n//       easing: theme.transitions.easing.easeOut,\n//       duration: theme.transitions.duration.enteringScreen,\n//     }),\n//     marginLeft: 0,\n//   },\n// }));\n\n// export default function PersistentDrawerLeft({ pageTitle, navItems, children }) {\n//   const classes = useStyles();\n//   const theme = useTheme();\n//   const [open, setOpen] = React.useState(true);\n\n//   const handleDrawerOpen = () => {\n//     setOpen(true);\n//   };\n\n//   const handleDrawerClose = () => {\n//     setOpen(false);\n//   };\n\n//   return (\n//     <div className={classes.root}>\n//       <CssBaseline />\n//       <AppBar\n//         position=\"fixed\"\n//         className={clsx(classes.appBar, {\n//           [classes.appBarShift]: open,\n//         })}\n//       >\n//         <Toolbar>\n//           <IconButton\n//             color=\"inherit\"\n//             aria-label=\"open drawer\"\n//             onClick={handleDrawerOpen}\n//             edge=\"start\"\n//             className={clsx(classes.menuButton, open && classes.hide)}\n//           >\n//             <MenuIcon />\n//           </IconButton>\n//           <Typography\n//             variant=\"h6\"\n//             noWrap\n//             style={{ display: \"flex\", alignItems: \"center\" }}\n//           >\n//             <img\n//               alt=\".\"\n//               src=\"/logo.png\"\n//               style={{ height: \"100px\", width: \"auto\" }}\n//             />\n//           </Typography>\n//         </Toolbar>\n//       </AppBar>\n//       <Drawer\n//         className={classes.drawer}\n//         variant=\"persistent\"\n//         anchor=\"left\"\n//         open={open}\n//         classes={{\n//           paper: classes.drawerPaper,\n//         }}\n//       >\n//         <div className={classes.drawerHeader}>\n//           <ListItemText>\n//             <b>{pageTitle}</b>\n//           </ListItemText>\n//           <IconButton onClick={handleDrawerClose}>\n//             {theme.direction === \"ltr\" ? (\n//               <ChevronLeftIcon style={{ color: \"#fff\" }} />\n//             ) : (\n//               <ChevronRightIcon />\n//             )}\n//           </IconButton>\n//         </div>\n//         <List>\n//           <Link to=\"/\" style={{ textDecoration: \"none\", color: \"#fff\" }}>\n//             <ListItem>\n//               <ListItemText>Home</ListItemText>\n//             </ListItem>\n//           </Link>\n//           <Link\n//             to=\"/explorer\"\n//             style={{ textDecoration: \"none\", color: \"#fff\" }}\n//           >\n//             <ListItem>\n//               <ListItemText>Explorer</ListItemText>\n//             </ListItem>\n//           </Link>\n//         </List>\n//         <List>\n//           {navItems.length !== 0 ? (\n//             navItems.map((item) => (\n//               <Link\n//                 to={item[1]}\n//                 style={{ textDecoration: \"none\", color: \"#fff\" }}\n//               >\n//                 <ListItem button key={item[0]}>\n//                   <ListItemText primary={item[0]} />\n//                 </ListItem>\n//               </Link>\n//             ))\n//           ) : (\n//             <></>\n//           )}\n//         </List>\n//         <div\n//           style={{ height: \"100%\", display: \"flex\", alignItems: \"flex-end\" }}\n//         >\n//           <div\n//             style={{\n//               width: \"100%\",\n//               height: \"70px\",\n//               display: \"flex\",\n//               justifyContent: \"center\",\n//               alignItems: \"center\",\n//               fontWeight: 500,\n//               fontSize: 17,\n//               borderTop: \"1px solid #44a\",\n//             }}\n//           >\n//             <a\n//               style={{ textDecoration: \"none\" }}\n//               href=\"#\"\n//             >\n//               <GitHubIcon style={{ color: \"#fff\" }} />\n//             </a>\n//           </div>\n//         </div>\n//       </Drawer>\n//       <main\n//         className={clsx(classes.content, {\n//           [classes.contentShift]: open,\n//         })}\n//       >\n//         <div className={classes.drawerHeader} />\n//         <div style={{ margin: \"0 auto\", maxWidth: 1300 }}>{children}</div>\n//       </main>\n//     </div>\n//   );\n// }\n\n\n\n\n\n\n\n\nimport React from \"react\";\nimport clsx from \"clsx\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport List from \"@material-ui/core/List\";\nimport Typography from \"@material-ui/core/Typography\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport ExploreIcon from \"@material-ui/icons/Explore\";\nimport GitHubIcon from \"@material-ui/icons/GitHub\";\nimport { Link } from \"react-router-dom\";\n\nconst drawerWidth = 260;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  appBar: {\n    background: \"linear-gradient(135deg, #6a11cb, #2575fc)\",\n    transition: theme.transitions.create([\"margin\", \"width\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    color: \"#fff\",\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create([\"margin\", \"width\"], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  hide: {\n    display: \"none\",\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n    background: \"#1c1c1c\",\n    color: \"#fff\",\n    boxShadow: \"4px 0px 10px rgba(0,0,0,0.3)\",\n  },\n  drawerHeader: {\n    display: \"flex\",\n    alignItems: \"center\",\n    padding: theme.spacing(0, 1),\n    ...theme.mixins.toolbar,\n    justifyContent: \"space-between\",\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    transition: theme.transitions.create(\"margin\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginLeft: -drawerWidth,\n  },\n  contentShift: {\n    transition: theme.transitions.create(\"margin\", {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginLeft: 0,\n  },\n  sidebarButton: {\n    color: \"#fff\",\n    padding: \"12px 20px\",\n    display: \"flex\",\n    alignItems: \"center\",\n    borderRadius: \"5px\",\n    margin: \"5px 15px\",\n    \"&:hover\": {\n      background: \"#333\",\n      transition: \"0.3s\",\n    },\n  },\n  sidebarIcon: {\n    marginRight: 10,\n  },\n  githubFooter: {\n    width: \"100%\",\n    height: \"70px\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    borderTop: \"1px solid #444\",\n  },\n}));\n\nexport default function PersistentDrawerLeft({ pageTitle, navItems, children }) {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [open, setOpen] = React.useState(true);\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar\n        position=\"fixed\"\n        className={clsx(classes.appBar, { [classes.appBarShift]: open })}\n      >\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            edge=\"start\"\n            className={clsx(classes.menuButton, open && classes.hide)}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" noWrap style={{ display: \"flex\", alignItems: \"center\" }}>\n            <img\n              alt=\"logo\"\n              src=\"/logo.png\"\n              style={{ height: \"40px\", width: \"auto\", marginRight: 10 }}\n            />\n            SecureChain\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        className={classes.drawer}\n        variant=\"persistent\"\n        anchor=\"left\"\n        open={open}\n        classes={{ paper: classes.drawerPaper }}\n      >\n        <div className={classes.drawerHeader}>\n          <Typography variant=\"h6\">{pageTitle}</Typography>\n          <IconButton onClick={handleDrawerClose}>\n            {theme.direction === \"ltr\" ? <ChevronLeftIcon style={{ color: \"#fff\" }} /> : <ChevronRightIcon />}\n          </IconButton>\n        </div>\n        <List>\n          <Link to=\"/\" style={{ textDecoration: \"none\" }}>\n            <ListItem button className={classes.sidebarButton}>\n              <HomeIcon className={classes.sidebarIcon} />\n              <ListItemText primary=\"Home\" />\n            </ListItem>\n          </Link>\n          <Link to=\"/explorer\" style={{ textDecoration: \"none\" }}>\n            <ListItem button className={classes.sidebarButton}>\n              <ExploreIcon className={classes.sidebarIcon} />\n              <ListItemText primary=\"Explorer\" />\n            </ListItem>\n          </Link>\n        </List>\n        <List>\n          {navItems.length !== 0 &&\n            navItems.map((item) => (\n              <Link to={item[1]} style={{ textDecoration: \"none\" }} key={item[0]}>\n                <ListItem button className={classes.sidebarButton}>\n                  <ListItemText primary={item[0]} />\n                </ListItem>\n              </Link>\n            ))}\n        </List>\n        <div className={classes.githubFooter}>\n          <a href=\"#\" style={{ textDecoration: \"none\" }}>\n            <GitHubIcon style={{ color: \"#fff\" }} />\n          </a>\n        </div>\n      </Drawer>\n      <main className={clsx(classes.content, { [classes.contentShift]: open })}>\n        <div className={classes.drawerHeader} />\n        <div style={{ margin: \"0 auto\", maxWidth: 1300 }}>{children}</div>\n      </main>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}