{"ast":null,"code":"// import React from \"react\";\n// import clsx from \"clsx\";\n// import { makeStyles, useTheme } from \"@material-ui/core/styles\";\n// import Drawer from \"@material-ui/core/Drawer\";\n// import CssBaseline from \"@material-ui/core/CssBaseline\";\n// import AppBar from \"@material-ui/core/AppBar\";\n// import Toolbar from \"@material-ui/core/Toolbar\";\n// import List from \"@material-ui/core/List\";\n// import Typography from \"@material-ui/core/Typography\";\n// import IconButton from \"@material-ui/core/IconButton\";\n// import MenuIcon from \"@material-ui/icons/Menu\";\n// import ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\n// import ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\n// import ListItem from \"@material-ui/core/ListItem\";\n// import ListItemText from \"@material-ui/core/ListItemText\";\n// import { Link } from \"react-router-dom\";\n// import GitHubIcon from \"@material-ui/icons/GitHub\";\n// const drawerWidth = 240;\n// const useStyles = makeStyles((theme) => ({\n//   root: {\n//     display: \"flex\",\n//   },\n//   appBar: {\n//     backgroundColor: \"#5C2D91\", \n//     transition: theme.transitions.create([\"margin\", \"width\"], {\n//       easing: theme.transitions.easing.sharp,\n//       duration: theme.transitions.duration.leavingScreen,\n//     }),\n//   },\n//   appBarShift: {\n//     width: `calc(100% - ${drawerWidth}px)`,\n//     marginLeft: drawerWidth,\n//     transition: theme.transitions.create([\"margin\", \"width\"], {\n//       easing: theme.transitions.easing.easeOut,\n//       duration: theme.transitions.duration.enteringScreen,\n//     }),\n//   },\n//   menuButton: {\n//     marginRight: theme.spacing(2),\n//   },\n//   hide: {\n//     display: \"none\",\n//   },\n//   drawer: {\n//     width: drawerWidth,\n//     flexShrink: 0,\n//   },\n//   drawerPaper: {\n//     width: drawerWidth,\n//     backgroundColor: \"#5C2D91\", \n//     color: \"#fff\",\n//   },\n//   drawerHeader: {\n//     display: \"flex\",\n//     alignItems: \"center\",\n//     padding: theme.spacing(0, 1),\n//     // necessary for content to be below app bar\n//     ...theme.mixins.toolbar,\n//     justifyContent: \"flex-end\",\n//   },\n//   content: {\n//     flexGrow: 1,\n//     padding: theme.spacing(3),\n//     transition: theme.transitions.create(\"margin\", {\n//       easing: theme.transitions.easing.sharp,\n//       duration: theme.transitions.duration.leavingScreen,\n//     }),\n//     marginLeft: -drawerWidth,\n//   },\n//   contentShift: {\n//     transition: theme.transitions.create(\"margin\", {\n//       easing: theme.transitions.easing.easeOut,\n//       duration: theme.transitions.duration.enteringScreen,\n//     }),\n//     marginLeft: 0,\n//   },\n// }));\n// export default function PersistentDrawerLeft({ pageTitle, navItems, children }) {\n//   const classes = useStyles();\n//   const theme = useTheme();\n//   const [open, setOpen] = React.useState(true);\n//   const handleDrawerOpen = () => {\n//     setOpen(true);\n//   };\n//   const handleDrawerClose = () => {\n//     setOpen(false);\n//   };\n//   return (\n//     <div className={classes.root}>\n//       <CssBaseline />\n//       <AppBar\n//         position=\"fixed\"\n//         className={clsx(classes.appBar, {\n//           [classes.appBarShift]: open,\n//         })}\n//       >\n//         <Toolbar>\n//           <IconButton\n//             color=\"inherit\"\n//             aria-label=\"open drawer\"\n//             onClick={handleDrawerOpen}\n//             edge=\"start\"\n//             className={clsx(classes.menuButton, open && classes.hide)}\n//           >\n//             <MenuIcon />\n//           </IconButton>\n//           <Typography\n//             variant=\"h6\"\n//             noWrap\n//             style={{ display: \"flex\", alignItems: \"center\" }}\n//           >\n//             <img\n//               alt=\".\"\n//               src=\"/logo.png\"\n//               style={{ height: \"100px\", width: \"auto\" }}\n//             />\n//           </Typography>\n//         </Toolbar>\n//       </AppBar>\n//       <Drawer\n//         className={classes.drawer}\n//         variant=\"persistent\"\n//         anchor=\"left\"\n//         open={open}\n//         classes={{\n//           paper: classes.drawerPaper,\n//         }}\n//       >\n//         <div className={classes.drawerHeader}>\n//           <ListItemText>\n//             <b>{pageTitle}</b>\n//           </ListItemText>\n//           <IconButton onClick={handleDrawerClose}>\n//             {theme.direction === \"ltr\" ? (\n//               <ChevronLeftIcon style={{ color: \"#fff\" }} />\n//             ) : (\n//               <ChevronRightIcon />\n//             )}\n//           </IconButton>\n//         </div>\n//         <List>\n//           <Link to=\"/\" style={{ textDecoration: \"none\", color: \"#fff\" }}>\n//             <ListItem>\n//               <ListItemText>Home</ListItemText>\n//             </ListItem>\n//           </Link>\n//           <Link\n//             to=\"/explorer\"\n//             style={{ textDecoration: \"none\", color: \"#fff\" }}\n//           >\n//             <ListItem>\n//               <ListItemText>Explorer</ListItemText>\n//             </ListItem>\n//           </Link>\n//         </List>\n//         <List>\n//           {navItems.length !== 0 ? (\n//             navItems.map((item) => (\n//               <Link\n//                 to={item[1]}\n//                 style={{ textDecoration: \"none\", color: \"#fff\" }}\n//               >\n//                 <ListItem button key={item[0]}>\n//                   <ListItemText primary={item[0]} />\n//                 </ListItem>\n//               </Link>\n//             ))\n//           ) : (\n//             <></>\n//           )}\n//         </List>\n//         <div\n//           style={{ height: \"100%\", display: \"flex\", alignItems: \"flex-end\" }}\n//         >\n//           <div\n//             style={{\n//               width: \"100%\",\n//               height: \"70px\",\n//               display: \"flex\",\n//               justifyContent: \"center\",\n//               alignItems: \"center\",\n//               fontWeight: 500,\n//               fontSize: 17,\n//               borderTop: \"1px solid #44a\",\n//             }}\n//           >\n//             <a\n//               style={{ textDecoration: \"none\" }}\n//               href=\"#\"\n//             >\n//               <GitHubIcon style={{ color: \"#fff\" }} />\n//             </a>\n//           </div>\n//         </div>\n//       </Drawer>\n//       <main\n//         className={clsx(classes.content, {\n//           [classes.contentShift]: open,\n//         })}\n//       >\n//         <div className={classes.drawerHeader} />\n//         <div style={{ margin: \"0 auto\", maxWidth: 1300 }}>{children}</div>\n//       </main>\n//     </div>\n//   );\n// }","map":{"version":3,"sources":["C:/Users/Pujitha Balaga/Desktop/SCM PROJECT/Code_SCM/client/src/components/Navbar.js"],"names":[],"mappingssourcesContent":["// import React from \"react\";\n// import clsx from \"clsx\";\n// import { makeStyles, useTheme } from \"@material-ui/core/styles\";\n// import Drawer from \"@material-ui/core/Drawer\";\n// import CssBaseline from \"@material-ui/core/CssBaseline\";\n// import AppBar from \"@material-ui/core/AppBar\";\n// import Toolbar from \"@material-ui/core/Toolbar\";\n// import List from \"@material-ui/core/List\";\n// import Typography from \"@material-ui/core/Typography\";\n// import IconButton from \"@material-ui/core/IconButton\";\n// import MenuIcon from \"@material-ui/icons/Menu\";\n// import ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\n// import ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\n// import ListItem from \"@material-ui/core/ListItem\";\n// import ListItemText from \"@material-ui/core/ListItemText\";\n// import { Link } from \"react-router-dom\";\n// import GitHubIcon from \"@material-ui/icons/GitHub\";\n\n// const drawerWidth = 240;\n\n// const useStyles = makeStyles((theme) => ({\n//   root: {\n//     display: \"flex\",\n//   },\n//   appBar: {\n//     backgroundColor: \"#5C2D91\", \n//     transition: theme.transitions.create([\"margin\", \"width\"], {\n//       easing: theme.transitions.easing.sharp,\n//       duration: theme.transitions.duration.leavingScreen,\n//     }),\n//   },\n//   appBarShift: {\n//     width: `calc(100% - ${drawerWidth}px)`,\n//     marginLeft: drawerWidth,\n//     transition: theme.transitions.create([\"margin\", \"width\"], {\n//       easing: theme.transitions.easing.easeOut,\n//       duration: theme.transitions.duration.enteringScreen,\n//     }),\n//   },\n//   menuButton: {\n//     marginRight: theme.spacing(2),\n//   },\n//   hide: {\n//     display: \"none\",\n//   },\n//   drawer: {\n//     width: drawerWidth,\n//     flexShrink: 0,\n//   },\n//   drawerPaper: {\n//     width: drawerWidth,\n//     backgroundColor: \"#5C2D91\", \n//     color: \"#fff\",\n//   },\n//   drawerHeader: {\n//     display: \"flex\",\n//     alignItems: \"center\",\n//     padding: theme.spacing(0, 1),\n//     // necessary for content to be below app bar\n//     ...theme.mixins.toolbar,\n//     justifyContent: \"flex-end\",\n//   },\n//   content: {\n//     flexGrow: 1,\n//     padding: theme.spacing(3),\n//     transition: theme.transitions.create(\"margin\", {\n//       easing: theme.transitions.easing.sharp,\n//       duration: theme.transitions.duration.leavingScreen,\n//     }),\n//     marginLeft: -drawerWidth,\n//   },\n//   contentShift: {\n//     transition: theme.transitions.create(\"margin\", {\n//       easing: theme.transitions.easing.easeOut,\n//       duration: theme.transitions.duration.enteringScreen,\n//     }),\n//     marginLeft: 0,\n//   },\n// }));\n\n// export default function PersistentDrawerLeft({ pageTitle, navItems, children }) {\n//   const classes = useStyles();\n//   const theme = useTheme();\n//   const [open, setOpen] = React.useState(true);\n\n//   const handleDrawerOpen = () => {\n//     setOpen(true);\n//   };\n\n//   const handleDrawerClose = () => {\n//     setOpen(false);\n//   };\n\n//   return (\n//     <div className={classes.root}>\n//       <CssBaseline />\n//       <AppBar\n//         position=\"fixed\"\n//         className={clsx(classes.appBar, {\n//           [classes.appBarShift]: open,\n//         })}\n//       >\n//         <Toolbar>\n//           <IconButton\n//             color=\"inherit\"\n//             aria-label=\"open drawer\"\n//             onClick={handleDrawerOpen}\n//             edge=\"start\"\n//             className={clsx(classes.menuButton, open && classes.hide)}\n//           >\n//             <MenuIcon />\n//           </IconButton>\n//           <Typography\n//             variant=\"h6\"\n//             noWrap\n//             style={{ display: \"flex\", alignItems: \"center\" }}\n//           >\n//             <img\n//               alt=\".\"\n//               src=\"/logo.png\"\n//               style={{ height: \"100px\", width: \"auto\" }}\n//             />\n//           </Typography>\n//         </Toolbar>\n//       </AppBar>\n//       <Drawer\n//         className={classes.drawer}\n//         variant=\"persistent\"\n//         anchor=\"left\"\n//         open={open}\n//         classes={{\n//           paper: classes.drawerPaper,\n//         }}\n//       >\n//         <div className={classes.drawerHeader}>\n//           <ListItemText>\n//             <b>{pageTitle}</b>\n//           </ListItemText>\n//           <IconButton onClick={handleDrawerClose}>\n//             {theme.direction === \"ltr\" ? (\n//               <ChevronLeftIcon style={{ color: \"#fff\" }} />\n//             ) : (\n//               <ChevronRightIcon />\n//             )}\n//           </IconButton>\n//         </div>\n//         <List>\n//           <Link to=\"/\" style={{ textDecoration: \"none\", color: \"#fff\" }}>\n//             <ListItem>\n//               <ListItemText>Home</ListItemText>\n//             </ListItem>\n//           </Link>\n//           <Link\n//             to=\"/explorer\"\n//             style={{ textDecoration: \"none\", color: \"#fff\" }}\n//           >\n//             <ListItem>\n//               <ListItemText>Explorer</ListItemText>\n//             </ListItem>\n//           </Link>\n//         </List>\n//         <List>\n//           {navItems.length !== 0 ? (\n//             navItems.map((item) => (\n//               <Link\n//                 to={item[1]}\n//                 style={{ textDecoration: \"none\", color: \"#fff\" }}\n//               >\n//                 <ListItem button key={item[0]}>\n//                   <ListItemText primary={item[0]} />\n//                 </ListItem>\n//               </Link>\n//             ))\n//           ) : (\n//             <></>\n//           )}\n//         </List>\n//         <div\n//           style={{ height: \"100%\", display: \"flex\", alignItems: \"flex-end\" }}\n//         >\n//           <div\n//             style={{\n//               width: \"100%\",\n//               height: \"70px\",\n//               display: \"flex\",\n//               justifyContent: \"center\",\n//               alignItems: \"center\",\n//               fontWeight: 500,\n//               fontSize: 17,\n//               borderTop: \"1px solid #44a\",\n//             }}\n//           >\n//             <a\n//               style={{ textDecoration: \"none\" }}\n//               href=\"#\"\n//             >\n//               <GitHubIcon style={{ color: \"#fff\" }} />\n//             </a>\n//           </div>\n//         </div>\n//       </Drawer>\n//       <main\n//         className={clsx(classes.content, {\n//           [classes.contentShift]: open,\n//         })}\n//       >\n//         <div className={classes.drawerHeader} />\n//         <div style={{ margin: \"0 auto\", maxWidth: 1300 }}>{children}</div>\n//       </main>\n//     </div>\n//   );\n// }\n"]},"metadata":{},"sourceType":"module"}